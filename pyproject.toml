[project]
name = "roboquote"
version = "0.7.0"
description = "A generator of inspirational quotes"
authors = [
    { name = "corenting", email = "corenting@gmail.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.13,<3.14"

dependencies = [
    "curl-cffi (>=0.7.4,<0.8.0)",
    "environs (>=14.1.0,<15.0.0)",
    "jinja2 (>=3.1.5,<4.0.0)",
    "loguru (>=0.7.2,<1.0.0)",
    "pillow (>=11.1.0,<12.0.0)",
    "starlette (>=0.45.2,<1.0.0)",
    "typer (>=0.15.1,<1.0.0)",
    "uvicorn[standard] (>=0.34.0,<1.0.0)",
]

[tool.poetry.group.dev.dependencies]
pyright = "*"
ruff = "*"

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), ruff rules (RUF),
# flake8-comprehensions (C4), flake8-datetimez (DTZ), isort (I), pep8-naming (N)
# pyupgrade (UP), flake8-async (ASYNC), flake8-bandit (S), perflint (PERF),
# tryceratops (TRY)
select = ["E", "F", "RUF", "C4", "DTZ", "I", "N", "UP", "ASYNC", "S", "PERF", "TRY"]
ignore = [
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "TRY003",  # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
